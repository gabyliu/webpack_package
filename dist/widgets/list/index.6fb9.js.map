{"version":3,"sources":["webpack:///widgets/list/index.6fb9.js","webpack:///webpack/bootstrap 6fb9adce7f75dc4968ab?0e95****","webpack:///./F:/一些尝试/component/webpack_package/src/widgets/list/index.js?0906"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","0","6","Object","defineProperty","value","Table","Inner","List","undefined","METHOD","isEmptyJson","d","name","hasOwnProperty","React","createClass","displayName","render","listEles","this","props","data","eles","map","list","createElement","className","title","content","containerClass","setting","classname","thead","classNameTh","tbody","console","log","push","colSpan","length","i","tbodyTdEle","ele","eleSetting","classNameTd","trClassName","cellSpacing","getInitialState","isOpen","tr1","tr2","resultList","hadle","v","setState","JSON","stringify","handleClickOpenSetting","index","e","stateIsopen","state","settingList","settingTable","onClick","bind","document","getElementById","15"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAE,WACAE,GAAAJ,EACAK,QAAA,EAUA,OANAP,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,QAAA,EAGAF,EAAAD,QAvBA,GAAAD,KAqCA,OATAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,GAGAV,EAAA,KDMMW,EACA,SAASP,EAAQD,EAASH,GAE/BI,EAAOD,QAAUH,EAAoB,IAKhCY,EACA,SAASR,EAAQD,EAASH,GAE/B,YAEAa,QAAOC,eAAeX,EAAS,cAC3BY,OAAO,IAEXZ,EAAQa,MAAQb,EAAQc,MAAQd,EAAQe,KAAOC,OE5DhDnB,EAAA,GAOA,IAAIoB,IACAC,YAAa,SAASC,GAClB,IAAI,GAAIC,KAAQD,GACZ,GAAGA,EAAEE,eAAeD,GAChB,OAAO,CAGf,QAAO,IAKXL,EAAOO,MAAMC,aAAYC,YAAA,OAEzBC,OAAQ,WACJ,GAAIC,GAAWC,KAAKC,MAAMC,KAAKC,KAAKC,IAAI,SAASC,GAC7C,MAAQV,OAAAW,cAAA,MAAIC,UAAU,gBAClBZ,MAAAW,cAAA,OAAKC,UAAU,0BACXZ,MAAAW,cAAA,OAAKC,UAAU,kBAAkBF,EAAKG,OACtCb,MAAAW,cAAA,OAAKC,UAAU,oBAAoBF,EAAKI,YAIpD,OACId,OAAAW,cAAA,MAAIC,UAAU,YACTR,MAMbb,EAAQS,MAAMC,aAAYC,YAAA,QAC1BC,OAAQ,WACJ,GAAIY,GAAiBV,KAAKC,MAAMC,KAAKS,QAAQC,UAAY,yBAA2BZ,KAAKC,MAAMC,KAAKS,QAAQC,UAAY,wBACpHC,EAAQb,KAAKC,MAAMC,KAAKW,MAAMT,IAAI,SAASC,GACvC,GAAIM,GAAUN,EAAKM,QAAUN,EAAKM,WAC9BG,EAAc,cAAgBH,EAAQC,SAC1C,OACIjB,OAAAW,cAAA,MAAIC,UAAWO,GAAcT,EAAKI,WAG1CM,IAEJ,IAAmC,mBAAzBf,MAAKC,MAAMC,KAAKa,OAAyBzB,EAAOC,YAAYS,KAAKC,MAAMC,KAAKa,OAelFC,QAAQC,IAAI,SACZF,EAAMG,KACFvB,MAAAW,cAAA,UACIX,MAAAW,cAAA,MAAIC,UAAU,mBAAmBY,QAASnB,KAAKC,MAAMC,KAAKW,MAAMO,QAAhE,eAlBiF,CACzFJ,QAAQC,IAAI,MACZ,KAAI,GAAII,KAAKrB,MAAKC,MAAMC,KAAKa,MAAM,CAC/B,GAAIJ,GAAUX,KAAKC,MAAMC,KAAKa,MAAMM,GAAGV,QAAUX,KAAKC,MAAMC,KAAKa,MAAMM,GAAGV,WACtEW,EAAatB,KAAKC,MAAMC,KAAKa,MAAMM,GAAGZ,QAAQL,IAAI,SAASmB,GACvD,GAAIC,GAAaD,EAAIZ,QAAUY,EAAIZ,WAC/Bc,EAAc,cAAgBD,EAAWZ,SAC7C,OACIjB,OAAAW,cAAA,MAAIC,UAAWkB,GAAcF,EAAId,WAGzCiB,EAAcf,EAAQC,UAAYD,EAAQC,UAAY,EAC1DG,GAAMG,KAAKvB,MAAAW,cAAA,MAAIC,UAAWmB,GAAcJ,KAWhD,MACI3B,OAAAW,cAAA,OAAKC,UAAWG,GACZf,MAAAW,cAAA,SAAOqB,YAAY,IAAIpB,UAAU,SAC7BZ,MAAAW,cAAA,SAAOC,UAAU,SACbZ,MAAAW,cAAA,UAAKO,IAETlB,MAAAW,cAAA,SAAOC,UAAU,SACZQ,QAQrB5B,EAAQQ,MAAMC,aAAYC,YAAA,QAC1B+B,gBAAiB,WACb,OACIC,QACIzC,MAAM,EACNF,OAAO,GAEXE,MACIe,OAEQK,MAAO,gBACPC,QAAS,oBAGTD,MAAO,gBACPC,QAAS,oBAGTD,MAAO,gBACPC,QAAS,oBAGTD,MAAO,gBACPC,QAAS,qBAIrBvB,OACIyB,SACIC,UAAW,WAEfC,QAEQF,SACIC,UAAW,eAEfH,QAAS,WAGTE,SACIC,UAAW,eAEfH,QAAS,WAGTE,SACIC,UAAW,eAEfH,QAAS,WAGjBM,OACIe,KACInB,SACIC,UAAW,OAEfH,UAEQE,SACIC,UAAW,gBAEfH,QAAS,WAGTE,SACIC,UAAW,gBAEfH,QAAS,WAGTE,SACIC,UAAW,gBAEfH,QAAS,YAIrBsB,KACIpB,SACIC,UAAW,OAEfH,UAEQE,SACIC,UAAW,gBAEfH,QAAS,WAGTE,SACIC,UAAW,gBAEfH,QAAS,WAGTE,SACIC,UAAW,gBAEfH,QAAS,cAM7BuB,WAAY,KAIpBC,MAAO,SAASC,GACZlC,KAAKmC,UACDH,WAAYI,KAAKC,UAAUH,MAGnCI,uBAAwB,SAASC,EAAOC,GACpC,GAAIC,GAAczC,KAAK0C,MAAMb,MAC7BY,GAAYF,IAAUE,EAAYF,GAElCvC,KAAKmC,UACDN,OAAQY,KAGhB3C,OAAQ,WACJ,GAAI6C,GAAcP,KAAKC,UAAUrC,KAAK0C,MAAMtD,KAAM,KAAM,MACpDwD,EAAeR,KAAKC,UAAUrC,KAAK0C,MAAMxD,MAAO,KAAM,KAE1D,OAAQS,OAAAW,cAAA,WACJX,MAAAW,cAAA,MAAIC,UAAWP,KAAK0C,MAAMb,OAAOzC,KAAO,oBAAsB,qBAAsByD,QAAS7C,KAAKsC,uBAAuBQ,KAAK9C,KAAM,SAApI,aACCA,KAAK0C,MAAMb,OAAOzC,KAAOO,MAAAW,cAAA,OAAKC,UAAU,WAAWoC,GAAqB,KACzEhD,MAAAW,cAAClB,GAAKc,KAAMF,KAAK0C,MAAMtD,OACvBO,MAAAW,cAAA,WACKN,KAAK0C,MAAMV,YAEhBrC,MAAAW,cAAA,WACAX,MAAAW,cAAA,WAEAX,MAAAW,cAAA,MAAIC,UAAWP,KAAK0C,MAAMb,OAAO3C,MAAQ,oBAAsB,qBAAsB2D,QAAS7C,KAAKsC,uBAAuBQ,KAAK9C,KAAM,UAArI,cACCA,KAAK0C,MAAMb,OAAO3C,MAAQS,MAAAW,cAAA,OAAKC,UAAU,WAAWqC,GAAsB,KAC3EjD,MAAAW,cAACpB,GAAMgB,KAAMF,KAAK0C,MAAMxD,QACxBS,MAAAW,cAAA,WACAX,MAAAW,cAAA,cAKZX,OAAMG,OACFH,MAAAW,cAACnB,EAAD,MACA4D,SAASC,eAAe,UFuG3B3E,EEpGOe,OFqGPf,EErGac,QFsGbd,EEtGoBa,SF0Gf+D,GACA,SAAS3E,EAAQD","file":"widgets\\list\\index.6fb9.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(6);\n\n\n/***/ },\n\n/***/ 6:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.Table = exports.Inner = exports.List = undefined;\n\t\n\t__webpack_require__(15);\n\t\n\t/*\r\n\tYourWidget：你的组件名称，可以多个组件\r\n\twidget.YourWidget：中的widget为文件所在文件夹名称\r\n\t*/\n\t\n\tvar METHOD = {\n\t    isEmptyJson: function isEmptyJson(d) {\n\t        for (var name in d) {\n\t            if (d.hasOwnProperty(name)) {\n\t                return false;\n\t            }\n\t        }\n\t        return true;\n\t    }\n\t};\n\t\n\t//list\n\tvar List = React.createClass({\n\t    displayName: \"List\",\n\t\n\t\n\t    render: function render() {\n\t        var listEles = this.props.data.eles.map(function (list) {\n\t            return React.createElement(\n\t                \"li\",\n\t                { className: \"msg_list_ele\" },\n\t                React.createElement(\n\t                    \"div\",\n\t                    { className: \"msg_list_ele_container\" },\n\t                    React.createElement(\n\t                        \"div\",\n\t                        { className: \"msg_list_title\" },\n\t                        list.title\n\t                    ),\n\t                    React.createElement(\n\t                        \"div\",\n\t                        { className: \"msg_list_content\" },\n\t                        list.content\n\t                    )\n\t                )\n\t            );\n\t        });\n\t        return React.createElement(\n\t            \"ul\",\n\t            { className: \"msg_list\" },\n\t            listEles\n\t        );\n\t    }\n\t});\n\t//table\n\tvar Table = React.createClass({\n\t    displayName: \"Table\",\n\t\n\t    render: function render() {\n\t        var containerClass = this.props.data.setting.classname ? 'table_wrp with_border ' + this.props.data.setting.classname : 'table_wrp with_border',\n\t            thead = this.props.data.thead.map(function (list) {\n\t            var setting = list.setting ? list.setting : {},\n\t                classNameTh = 'table_cell ' + setting.classname;\n\t            return React.createElement(\n\t                \"th\",\n\t                { className: classNameTh },\n\t                list.content\n\t            );\n\t        }),\n\t            tbody = [];\n\t\n\t        if (typeof this.props.data.tbody != 'undefined' && !METHOD.isEmptyJson(this.props.data.tbody)) {\n\t            console.log('有数据');\n\t            for (var i in this.props.data.tbody) {\n\t                var setting = this.props.data.tbody[i].setting ? this.props.data.tbody[i].setting : {},\n\t                    tbodyTdEle = this.props.data.tbody[i].content.map(function (ele) {\n\t                    var eleSetting = ele.setting ? ele.setting : {},\n\t                        classNameTd = 'table_cell ' + eleSetting.classname;\n\t                    return React.createElement(\n\t                        \"td\",\n\t                        { className: classNameTd },\n\t                        ele.content\n\t                    );\n\t                }),\n\t                    trClassName = setting.classname ? setting.classname : '';\n\t                tbody.push(React.createElement(\n\t                    \"tr\",\n\t                    { className: trClassName },\n\t                    tbodyTdEle\n\t                ));\n\t            }\n\t        } else {\n\t            console.log('暂无数据！');\n\t            tbody.push(React.createElement(\n\t                \"tr\",\n\t                null,\n\t                React.createElement(\n\t                    \"td\",\n\t                    { className: \"table_cell empty\", colSpan: this.props.data.thead.length },\n\t                    \"\\u6682\\u65E0\\u6570\\u636E\\uFF01\"\n\t                )\n\t            ));\n\t        }\n\t\n\t        return React.createElement(\n\t            \"div\",\n\t            { className: containerClass },\n\t            React.createElement(\n\t                \"table\",\n\t                { cellSpacing: \"0\", className: \"table\" },\n\t                React.createElement(\n\t                    \"thead\",\n\t                    { className: \"thead\" },\n\t                    React.createElement(\n\t                        \"tr\",\n\t                        null,\n\t                        thead\n\t                    )\n\t                ),\n\t                React.createElement(\n\t                    \"tbody\",\n\t                    { className: \"tbody\" },\n\t                    tbody\n\t                )\n\t            )\n\t        );\n\t    }\n\t});\n\t\n\tvar Inner = React.createClass({\n\t    displayName: \"Inner\",\n\t\n\t    getInitialState: function getInitialState() {\n\t        return {\n\t            isOpen: {\n\t                List: false,\n\t                Table: false\n\t            },\n\t            List: { //组件的配置\n\t                eles: [{\n\t                    title: '我是list的title1',\n\t                    content: '我是list的content1'\n\t                }, {\n\t                    title: '我是list的title2',\n\t                    content: '我是list的content2'\n\t                }, {\n\t                    title: '我是list的title3',\n\t                    content: '我是list的content3'\n\t                }, {\n\t                    title: '我是list的title4',\n\t                    content: '我是list的content4'\n\t                }]\n\t            },\n\t            Table: {\n\t                setting: {\n\t                    classname: 'history'\n\t                },\n\t                thead: [{\n\t                    setting: {\n\t                        classname: 'theadClass1'\n\t                    },\n\t                    content: 'thead1'\n\t                }, {\n\t                    setting: {\n\t                        classname: 'theadClass2'\n\t                    },\n\t                    content: 'thead2'\n\t                }, {\n\t                    setting: {\n\t                        classname: 'theadClass3'\n\t                    },\n\t                    content: 'thead3'\n\t                }],\n\t                tbody: {\n\t                    tr1: {\n\t                        setting: {\n\t                            classname: 'tr1'\n\t                        },\n\t                        content: [{\n\t                            setting: {\n\t                                classname: 'tr1td1Class1'\n\t                            },\n\t                            content: 'tr1td1'\n\t                        }, {\n\t                            setting: {\n\t                                classname: 'tr1td2Class2'\n\t                            },\n\t                            content: 'tr1td2'\n\t                        }, {\n\t                            setting: {\n\t                                classname: 'tr1td3Class3'\n\t                            },\n\t                            content: 'tr1td3'\n\t                        }]\n\t                    },\n\t                    tr2: {\n\t                        setting: {\n\t                            classname: 'tr2'\n\t                        },\n\t                        content: [{\n\t                            setting: {\n\t                                classname: 'tr2td1Class1'\n\t                            },\n\t                            content: 'tr2td1'\n\t                        }, {\n\t                            setting: {\n\t                                classname: 'tr2td2Class2'\n\t                            },\n\t                            content: 'tr2td2'\n\t                        }, {\n\t                            setting: {\n\t                                classname: 'tr2td3Class3'\n\t                            },\n\t                            content: 'tr2td3'\n\t                        }]\n\t                    }\n\t                }\n\t            },\n\t            resultList: '' //操作后的返回结果\n\t        };\n\t    },\n\t    hadle: function hadle(v) {\n\t        this.setState({\n\t            resultList: JSON.stringify(v)\n\t        });\n\t    },\n\t    handleClickOpenSetting: function handleClickOpenSetting(index, e) {\n\t        var stateIsopen = this.state.isOpen;\n\t        stateIsopen[index] = !stateIsopen[index];\n\t\n\t        this.setState({\n\t            isOpen: stateIsopen\n\t        });\n\t    },\n\t    render: function render() {\n\t        var settingList = JSON.stringify(this.state.List, null, '\\t'),\n\t            settingTable = JSON.stringify(this.state.Table, null, '\\t');\n\t\n\t        return React.createElement(\n\t            \"div\",\n\t            null,\n\t            React.createElement(\n\t                \"h3\",\n\t                { className: this.state.isOpen.List ? 'title_Widget open' : 'title_Widget close', onClick: this.handleClickOpenSetting.bind(this, 'List') },\n\t                \"list.List\"\n\t            ),\n\t            this.state.isOpen.List ? React.createElement(\n\t                \"pre\",\n\t                { className: \"setting\" },\n\t                settingList\n\t            ) : null,\n\t            React.createElement(List, { data: this.state.List }),\n\t            React.createElement(\n\t                \"div\",\n\t                null,\n\t                this.state.resultList\n\t            ),\n\t            React.createElement(\"br\", null),\n\t            React.createElement(\"br\", null),\n\t            React.createElement(\n\t                \"h3\",\n\t                { className: this.state.isOpen.Table ? 'title_Widget open' : 'title_Widget close', onClick: this.handleClickOpenSetting.bind(this, 'Table') },\n\t                \"list.Table\"\n\t            ),\n\t            this.state.isOpen.Table ? React.createElement(\n\t                \"pre\",\n\t                { className: \"setting\" },\n\t                settingTable\n\t            ) : null,\n\t            React.createElement(Table, { data: this.state.Table }),\n\t            React.createElement(\"br\", null),\n\t            React.createElement(\"br\", null)\n\t        );\n\t    }\n\t});\n\t\n\tReact.render(React.createElement(Inner, null), document.getElementById('inner'));\n\t\n\texports.List = List;\n\texports.Inner = Inner;\n\texports.Table = Table;\n\n/***/ },\n\n/***/ 15:\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }\n\n/******/ });\n\n\n// WEBPACK FOOTER //\n// widgets/list/index.6fb9.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 6fb9adce7f75dc4968ab","import './index.less';\r\n\r\n/*\r\nYourWidget：你的组件名称，可以多个组件\r\nwidget.YourWidget：中的widget为文件所在文件夹名称\r\n*/\r\n\r\nvar METHOD = {\r\n    isEmptyJson: function(d){\r\n        for(var name in d){\r\n            if(d.hasOwnProperty(name)){\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n};\r\n\r\n//list\r\nvar List = React.createClass({\r\n\r\n    render: function(){\r\n        var listEles = this.props.data.eles.map(function(list){\r\n            return (<li className=\"msg_list_ele\">\r\n                <div className=\"msg_list_ele_container\">\r\n                    <div className=\"msg_list_title\">{list.title}</div>\r\n                    <div className=\"msg_list_content\">{list.content}</div>\r\n                </div>\r\n            </li>)\r\n        });\r\n        return (\r\n            <ul className=\"msg_list\">\r\n                {listEles}\r\n            </ul>\r\n        )\r\n    }\r\n});\r\n//table\r\nvar Table = React.createClass({\r\n    render: function(){\r\n        var containerClass = this.props.data.setting.classname ? 'table_wrp with_border ' + this.props.data.setting.classname : 'table_wrp with_border',\r\n            thead = this.props.data.thead.map(function(list){\r\n                var setting = list.setting ? list.setting : {},\r\n                    classNameTh = 'table_cell ' + setting.classname;\r\n                return (\r\n                    <th className={classNameTh}>{list.content}</th>\r\n                )\r\n            }),\r\n            tbody = [];\r\n\r\n        if(typeof this.props.data.tbody != 'undefined' && !METHOD.isEmptyJson(this.props.data.tbody)){\r\n            console.log('有数据');\r\n            for(var i in this.props.data.tbody){\r\n                var setting = this.props.data.tbody[i].setting ? this.props.data.tbody[i].setting : {},\r\n                    tbodyTdEle = this.props.data.tbody[i].content.map(function(ele){\r\n                        var eleSetting = ele.setting ? ele.setting : {},\r\n                            classNameTd = 'table_cell ' + eleSetting.classname;\r\n                        return (\r\n                            <td className={classNameTd}>{ele.content}</td>\r\n                        )\r\n                    }),\r\n                    trClassName = setting.classname ? setting.classname : '';\r\n                tbody.push(<tr className={trClassName}>{tbodyTdEle}</tr>);\r\n            }\r\n        }else{\r\n            console.log('暂无数据！');\r\n            tbody.push(\r\n                <tr>\r\n                    <td className=\"table_cell empty\" colSpan={this.props.data.thead.length}>暂无数据！</td>\r\n                </tr>\r\n            );\r\n        }\r\n        \r\n        return (\r\n            <div className={containerClass}>\r\n                <table cellSpacing=\"0\" className=\"table\">\r\n                    <thead className=\"thead\">\r\n                        <tr>{thead}</tr>\r\n                    </thead>\r\n                    <tbody className=\"tbody\">\r\n                        {tbody}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n})\r\n\r\nvar Inner = React.createClass({\r\n    getInitialState: function(){\r\n        return {\r\n            isOpen: {\r\n                List: false,\r\n                Table: false\r\n            },\r\n            List: {//组件的配置\r\n                eles: [\r\n                    {\r\n                        title: '我是list的title1',\r\n                        content: '我是list的content1'\r\n                    },\r\n                    {\r\n                        title: '我是list的title2',\r\n                        content: '我是list的content2'\r\n                    },\r\n                    {\r\n                        title: '我是list的title3',\r\n                        content: '我是list的content3'\r\n                    },\r\n                    {\r\n                        title: '我是list的title4',\r\n                        content: '我是list的content4'\r\n                    }\r\n                ]\r\n            },\r\n            Table: {\r\n                setting: {\r\n                    classname: 'history'\r\n                },\r\n                thead: [\r\n                    {\r\n                        setting: {\r\n                            classname: 'theadClass1'\r\n                        },\r\n                        content: 'thead1'\r\n                    },\r\n                    {\r\n                        setting: {\r\n                            classname: 'theadClass2'\r\n                        },\r\n                        content: 'thead2'\r\n                    },\r\n                    {\r\n                        setting: {\r\n                            classname: 'theadClass3'\r\n                        },\r\n                        content: 'thead3'\r\n                    }\r\n                ],\r\n                tbody: {\r\n                    tr1: {\r\n                        setting: {\r\n                            classname: 'tr1'\r\n                        },\r\n                        content: [\r\n                            {\r\n                                setting: {\r\n                                    classname: 'tr1td1Class1'\r\n                                },\r\n                                content: 'tr1td1'\r\n                            },\r\n                            {\r\n                                setting: {\r\n                                    classname: 'tr1td2Class2'\r\n                                },\r\n                                content: 'tr1td2'\r\n                            },\r\n                            {\r\n                                setting: {\r\n                                    classname: 'tr1td3Class3'\r\n                                },\r\n                                content: 'tr1td3'\r\n                            }\r\n                        ]\r\n                    },\r\n                    tr2: {\r\n                        setting: {\r\n                            classname: 'tr2'\r\n                        },\r\n                        content: [\r\n                            {\r\n                                setting: {\r\n                                    classname: 'tr2td1Class1'\r\n                                },\r\n                                content: 'tr2td1'\r\n                            },\r\n                            {\r\n                                setting: {\r\n                                    classname: 'tr2td2Class2'\r\n                                },\r\n                                content: 'tr2td2'\r\n                            },\r\n                            {\r\n                                setting: {\r\n                                    classname: 'tr2td3Class3'\r\n                                },\r\n                                content: 'tr2td3'\r\n                            }\r\n                        ]\r\n                    } \r\n                }\r\n            },\r\n            resultList: ''//操作后的返回结果\r\n        }\r\n\r\n    },\r\n    hadle: function(v){\r\n        this.setState({\r\n            resultList: JSON.stringify(v)\r\n        });\r\n    },\r\n    handleClickOpenSetting: function(index, e){\r\n        var stateIsopen = this.state.isOpen;\r\n        stateIsopen[index] = !stateIsopen[index];\r\n        \r\n        this.setState({\r\n            isOpen: stateIsopen\r\n        });\r\n    },\r\n    render: function(){\r\n        var settingList = JSON.stringify(this.state.List, null, '\\t'),\r\n            settingTable = JSON.stringify(this.state.Table, null, '\\t');\r\n\r\n        return (<div>\r\n            <h3 className={this.state.isOpen.List ? 'title_Widget open' : 'title_Widget close'} onClick={this.handleClickOpenSetting.bind(this, 'List')}>list.List</h3>\r\n            {this.state.isOpen.List ? <pre className=\"setting\">{settingList}</pre> : null}\r\n            <List data={this.state.List} />\r\n            <div>\r\n                {this.state.resultList}\r\n            </div>\r\n            <br />\r\n            <br />\r\n\r\n            <h3 className={this.state.isOpen.Table ? 'title_Widget open' : 'title_Widget close'} onClick={this.handleClickOpenSetting.bind(this, 'Table')}>list.Table</h3>\r\n            {this.state.isOpen.Table ? <pre className=\"setting\">{settingTable}</pre> : null}\r\n            <Table data={this.state.Table} />\r\n            <br />\r\n            <br />\r\n        </div>)\r\n    }\r\n});\r\n\r\nReact.render(\r\n    <Inner />,\r\n    document.getElementById('inner')\r\n);\r\n\r\nexport {List, Inner, Table};\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./F:/一些尝试/component/webpack_package/src/widgets/list/index.js"],"sourceRoot":""}