{"version":3,"sources":["webpack:///widgets/dialog/index.6fb9.js","webpack:///webpack/bootstrap 6fb9adce7f75dc4968ab?0e95*****","webpack:///./F:/一些尝试/component/webpack_package/src/widgets/dialog/index.js?0f5a"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","0","4","Object","defineProperty","value","Inner","Dialog","undefined","Btn","React","createClass","displayName","handleClick","e","stopPropagation","this","props","data","handle","render","classNameBtn","setting","classname","createElement","onClick","className","text","getInitialState","v","_this","propsBtnList","btnList","map","list","btnData","bind","title","content","length","isOpen","handleDialogShow","resultDialog","isShow","stateIsShow","state","setState","dataIsShow","JSON","stringify","handleClickOpenSetting","index","stateIsopen","settingDialog","document","getElementById","13"],"mappings":"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","file":"widgets\\dialog\\index.6fb9.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(4);\n\n\n/***/ },\n\n/***/ 4:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.Inner = exports.Dialog = undefined;\n\t\n\t__webpack_require__(13);\n\t\n\t/*\r\n\tYourWidget：你的组件名称，可以多个组件\r\n\twidget.YourWidget：中的widget为文件所在文件夹名称\r\n\t*/\n\t\n\t//组件的实现\n\t//按钮\n\tvar Btn = React.createClass({\n\t    displayName: 'Btn',\n\t\n\t    handleClick: function handleClick(e) {\n\t        e.stopPropagation();\n\t        this.props.data.handle({\n\t            id: this.props.data.id\n\t        });\n\t    },\n\t    render: function render() {\n\t        var classNameBtn = typeof this.props.data.setting.classname != 'undefined' ? 'btn ' + this.props.data.setting.classname : 'btn';\n\t        return React.createElement(\n\t            'a',\n\t            { onClick: this.handleClick, className: classNameBtn },\n\t            this.props.data.setting.text\n\t        );\n\t    }\n\t});\n\t\n\tvar Dialog = React.createClass({\n\t    displayName: 'Dialog',\n\t\n\t    getInitialState: function getInitialState() {\n\t        return {};\n\t    },\n\t    handleClick: function handleClick(v) {\n\t        this.props.data.handle({\n\t            id: v\n\t        });\n\t    },\n\t    render: function render() {\n\t        var className = this.props.data.setting.classname ? 'dialog ' + this.props.data.setting.classname : 'dialog',\n\t            _this = this,\n\t            propsBtnList = this.props.data.setting.btnList ? this.props.data.setting.btnList : [],\n\t            btnList = propsBtnList.map(function (list) {\n\t            var btnData = list;\n\t            btnData.handle = _this.handleClick.bind(_this, _this.props.data.setting.id + '_' + btnData.setting.id);\n\t            return React.createElement(Btn, { data: btnData });\n\t        });\n\t\n\t        return React.createElement(\n\t            'div',\n\t            { className: 'dialog_mask' },\n\t            React.createElement(\n\t                'div',\n\t                { className: className },\n\t                this.props.data.setting.title ? React.createElement(\n\t                    'div',\n\t                    { className: 'dialog_head' },\n\t                    this.props.data.setting.title\n\t                ) : null,\n\t                React.createElement('span', { className: 'dialog_close', onClick: this.handleClick.bind(this, this.props.data.setting.id + '_close') }),\n\t                React.createElement(\n\t                    'div',\n\t                    { className: 'dialog_content' },\n\t                    this.props.data.setting.content\n\t                ),\n\t                btnList.length != 0 ? React.createElement(\n\t                    'div',\n\t                    { className: 'dialog_ft' },\n\t                    btnList\n\t                ) : null\n\t            )\n\t        );\n\t    }\n\t});\n\t\n\tvar Inner = React.createClass({\n\t    displayName: 'Inner',\n\t\n\t    getInitialState: function getInitialState() {\n\t        return {\n\t            isOpen: {\n\t                Dialog: false\n\t            },\n\t            Dialog: { //组件的配置\n\t                setting: {\n\t                    classname: 'myDialogClassname',\n\t                    title: '我的弹窗标题', //string，弹框标题\n\t                    content: '我的弹窗内容', //string, 弹框内容，也可以是另一个组件\n\t                    id: 'DialogId',\n\t                    btnList: [//没有btnList则没有dialog ft\n\t                    {\n\t                        setting: {\n\t                            id: 'dialog_btn_cancel', //必填，string，触发事件时会返回\n\t                            classname: 'btn_default', //选填，string，扩展的className\n\t                            text: '取消' }\n\t\n\t                    }, {\n\t                        setting: {\n\t                            id: 'dialog_btn_sure', //必填，string，触发事件时会返回\n\t                            classname: 'btn_primary', //选填，string，扩展的className\n\t                            text: '确定' }\n\t\n\t                    }]\n\t                },\n\t                handle: this.handle //object, 接收弹框点击事件\n\t\n\t            },\n\t            Btn: {\n\t                setting: {\n\t                    id: 'dialog_btn_cancel', //必填，string，触发事件时会返回\n\t                    classname: 'btn_primary', //选填，string，扩展的className\n\t                    text: '打开dialog' },\n\t                handle: this.handleDialogShow\n\t            },\n\t            resultDialog: '', //操作后的返回结果\n\t            isShow: {\n\t                Dialog: false\n\t            }\n\t        };\n\t    },\n\t    handleDialogShow: function handleDialogShow() {\n\t        var stateIsShow = this.state.isShow;\n\t        stateIsShow.Dialog = !stateIsShow.Dialog;\n\t        this.setState({\n\t            isShow: stateIsShow\n\t        });\n\t    },\n\t    handle: function handle(v) {\n\t        if (v.id == 'DialogId_close') {\n\t            var dataIsShow = this.state.isShow;\n\t            dataIsShow.Dialog = false;\n\t            this.setState({\n\t                isShow: dataIsShow,\n\t                resultDialog: JSON.stringify(v)\n\t            });\n\t        }\n\t        this.setState({\n\t            resultDialog: JSON.stringify(v)\n\t        });\n\t    },\n\t    handleClickOpenSetting: function handleClickOpenSetting(index, e) {\n\t        var stateIsopen = this.state.isOpen;\n\t        stateIsopen[index] = !stateIsopen[index];\n\t\n\t        this.setState({\n\t            isOpen: stateIsopen\n\t        });\n\t    },\n\t    render: function render() {\n\t        var settingDialog = JSON.stringify(this.state.Dialog, null, '\\t');\n\t\n\t        return React.createElement(\n\t            'div',\n\t            null,\n\t            React.createElement(\n\t                'h3',\n\t                { className: this.state.isOpen.Dialog ? 'title_Widget open' : 'title_Widget close', onClick: this.handleClickOpenSetting.bind(this, 'Dialog') },\n\t                'dialog.Dialog'\n\t            ),\n\t            this.state.isOpen.Dialog ? React.createElement(\n\t                'pre',\n\t                { className: 'setting' },\n\t                settingDialog\n\t            ) : null,\n\t            this.state.isShow.Dialog ? React.createElement(Dialog, { data: this.state.Dialog }) : null,\n\t            React.createElement(Btn, { data: this.state.Btn }),\n\t            React.createElement(\n\t                'div',\n\t                null,\n\t                this.state.resultDialog\n\t            ),\n\t            React.createElement('br', null),\n\t            React.createElement('br', null)\n\t        );\n\t    }\n\t});\n\t\n\tReact.render(React.createElement(Inner, null), document.getElementById('inner'));\n\t\n\texports.Dialog = Dialog;\n\texports.Inner = Inner;\n\n/***/ },\n\n/***/ 13:\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }\n\n/******/ });\n\n\n// WEBPACK FOOTER //\n// widgets/dialog/index.6fb9.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 6fb9adce7f75dc4968ab","import './index.less';\r\n\r\n/*\r\nYourWidget：你的组件名称，可以多个组件\r\nwidget.YourWidget：中的widget为文件所在文件夹名称\r\n*/\r\n\r\n//组件的实现\r\n//按钮\r\nvar Btn = React.createClass({\r\n    handleClick: function(e){\r\n        e.stopPropagation();\r\n        this.props.data.handle({\r\n            id: this.props.data.id\r\n        });\r\n    },\r\n    render: function(){\r\n        var classNameBtn = typeof this.props.data.setting.classname != 'undefined' ? 'btn ' + this.props.data.setting.classname : 'btn';\r\n        return (\r\n            <a onClick={this.handleClick} className={classNameBtn}>{this.props.data.setting.text}</a>\r\n        )\r\n    }\r\n});\r\n\r\nvar Dialog = React.createClass({\r\n    getInitialState: function(){\r\n        return {}\r\n    },\r\n    handleClick: function(v){\r\n        this.props.data.handle({\r\n            id: v\r\n        });\r\n    },\r\n    render: function(){\r\n        var className = this.props.data.setting.classname ? 'dialog ' + this.props.data.setting.classname : 'dialog',\r\n            _this = this,\r\n            propsBtnList = this.props.data.setting.btnList ? this.props.data.setting.btnList : [],\r\n            btnList = propsBtnList.map(function(list){\r\n                let btnData = list;\r\n                btnData.handle = _this.handleClick.bind(_this, (_this.props.data.setting.id + '_' +  btnData.setting.id));\r\n                return <Btn data={btnData} />;\r\n            });\r\n            \r\n        return (\r\n            <div className=\"dialog_mask\">\r\n                <div className={className}>\r\n                    {this.props.data.setting.title ? <div className=\"dialog_head\">{this.props.data.setting.title}</div> : null}\r\n                    <span className=\"dialog_close\" onClick={this.handleClick.bind(this, this.props.data.setting.id + '_close')}></span>\r\n                    <div className=\"dialog_content\">\r\n                        {this.props.data.setting.content}\r\n                    </div>\r\n                    {btnList.length != 0 ? <div className=\"dialog_ft\">\r\n                        {btnList}\r\n                    </div> : null}\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n});\r\n\r\n\r\nvar Inner = React.createClass({\r\n    getInitialState: function(){\r\n        return {\r\n            isOpen: {\r\n                Dialog: false\r\n            },\r\n            Dialog: {//组件的配置\r\n                setting: {\r\n                    classname: 'myDialogClassname',\r\n                    title: '我的弹窗标题',//string，弹框标题\r\n                    content: '我的弹窗内容',//string, 弹框内容，也可以是另一个组件\r\n                    id: 'DialogId',\r\n                    btnList: [//没有btnList则没有dialog ft\r\n                        {\r\n                            setting: {\r\n                                id: 'dialog_btn_cancel', //必填，string，触发事件时会返回\r\n                                classname: 'btn_default',//选填，string，扩展的className\r\n                                text: '取消',//必填，string，按钮文案\r\n                            }\r\n                            \r\n                        },\r\n                        {\r\n                            setting: {\r\n                                id: 'dialog_btn_sure', //必填，string，触发事件时会返回\r\n                                classname: 'btn_primary',//选填，string，扩展的className\r\n                                text: '确定',//必填，string，按钮文案\r\n                            }\r\n                            \r\n                        }\r\n                        \r\n                    ]\r\n                },\r\n                handle: this.handle//object, 接收弹框点击事件\r\n\r\n            },\r\n            Btn: {\r\n                setting: {\r\n                    id: 'dialog_btn_cancel', //必填，string，触发事件时会返回\r\n                    classname: 'btn_primary',//选填，string，扩展的className\r\n                    text: '打开dialog',//必填，string，按钮文案\r\n                },\r\n                handle: this.handleDialogShow\r\n            },\r\n            resultDialog: '',//操作后的返回结果\r\n            isShow: {\r\n                Dialog: false\r\n            }\r\n        }\r\n\r\n    },\r\n    handleDialogShow: function(){\r\n        var stateIsShow = this.state.isShow;\r\n        stateIsShow.Dialog = !stateIsShow.Dialog;\r\n        this.setState({\r\n            isShow: stateIsShow\r\n        });\r\n    },\r\n    handle: function(v){\r\n        if(v.id == 'DialogId_close'){\r\n            var dataIsShow = this.state.isShow;\r\n            dataIsShow.Dialog = false;\r\n            this.setState({\r\n                isShow: dataIsShow,\r\n                resultDialog: JSON.stringify(v)\r\n            });\r\n        }\r\n        this.setState({\r\n            resultDialog: JSON.stringify(v)\r\n        });\r\n    },\r\n    handleClickOpenSetting: function(index, e){\r\n        var stateIsopen = this.state.isOpen;\r\n        stateIsopen[index] = !stateIsopen[index];\r\n        \r\n        this.setState({\r\n            isOpen: stateIsopen\r\n        });\r\n    },\r\n    render: function(){\r\n        var settingDialog = JSON.stringify(this.state.Dialog, null, '\\t');\r\n\r\n        return (<div>\r\n            <h3 className={this.state.isOpen.Dialog ? 'title_Widget open' : 'title_Widget close'} onClick={this.handleClickOpenSetting.bind(this, 'Dialog')}>dialog.Dialog</h3>\r\n            {this.state.isOpen.Dialog ? <pre className=\"setting\">{settingDialog}</pre> : null}\r\n            {this.state.isShow.Dialog ? <Dialog data={this.state.Dialog} /> : null}\r\n            <Btn data={this.state.Btn} />\r\n            <div>\r\n                {this.state.resultDialog}\r\n            </div>\r\n\r\n            <br />\r\n            <br />\r\n        </div>)\r\n    }\r\n});\r\n\r\nReact.render(\r\n    <Inner />,\r\n    document.getElementById('inner')\r\n);\r\n\r\nexport {Dialog, Inner};\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./F:/一些尝试/component/webpack_package/src/widgets/dialog/index.js"],"sourceRoot":""}