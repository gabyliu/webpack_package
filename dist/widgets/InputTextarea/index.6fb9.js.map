{"version":3,"sources":["webpack:///widgets/InputTextarea/index.6fb9.js","webpack:///webpack/bootstrap 6fb9adce7f75dc4968ab?0e95********","webpack:///./F:/一些尝试/component/webpack_package/src/widgets/InputTextarea/index.js?7260"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","0","1","Object","defineProperty","value","Inner","TextareaHint","InputHint","undefined","React","createClass","displayName","handleChange","e","this","props","data","handle","target","render","classNameContainer","classname","domHint","max","createElement","className","num","status","failText","label","onChange","type","placeholder","setting","getInitialState","isOpen","input","textarea","handleChangeInput","ret","handleChangeTextarea","resultInput","resultTextarea","componentWillMount","initInputValue","initTextareaValue","stateInput","state","stateTextarea","length","setState","v","JSON","stringify","handleClickOpenSetting","index","stateIsopen","settingInput","settingTextarea","onClick","bind","document","getElementById","10"],"mappings":"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","file":"widgets\\InputTextarea\\index.6fb9.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n\n/***/ 1:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.Inner = exports.TextareaHint = exports.InputHint = undefined;\n\t\n\t__webpack_require__(10);\n\t\n\t//带输入提示的输入框\n\tvar InputHint = React.createClass({\n\t    displayName: 'InputHint',\n\t\n\t    handleChange: function handleChange(e) {\n\t        this.props.data.handle({\n\t            value: e.target.value,\n\t            id: this.props.data.id\n\t        });\n\t    },\n\t    render: function render() {\n\t        var classNameContainer = typeof this.props.data.classname != 'undefined' ? 'frm_input_group with_hint ' + this.props.data.classname : 'frm_input_group with_hint',\n\t            domHint = typeof this.props.data.max != 'undefined' ? React.createElement(\n\t            'span',\n\t            { className: 'frm_hint' },\n\t            React.createElement(\n\t                'i',\n\t                null,\n\t                this.props.data.num\n\t            ),\n\t            React.createElement(\n\t                'span',\n\t                null,\n\t                ' / '\n\t            ),\n\t            React.createElement(\n\t                'b',\n\t                null,\n\t                this.props.data.max\n\t            )\n\t        ) : null;\n\t        this.props.data.status.failText ? classNameContainer += ' fail' : classNameContainer;\n\t\n\t        return React.createElement(\n\t            'div',\n\t            { className: classNameContainer },\n\t            this.props.data.label ? React.createElement(\n\t                'label',\n\t                { className: 'frm_label' },\n\t                this.props.data.label\n\t            ) : null,\n\t            React.createElement(\n\t                'span',\n\t                { className: 'frm_input_box' },\n\t                React.createElement('input', { onChange: this.handleChange, type: 'text', placeholder: this.props.data.placeholder, className: 'frm_input', value: this.props.data.value }),\n\t                domHint\n\t            ),\n\t            this.props.data.status.failText ? React.createElement(\n\t                'p',\n\t                { className: 'frm_tips fail' },\n\t                this.props.data.status.failText\n\t            ) : null\n\t        );\n\t    }\n\t});\n\t\n\t//带输入提示的textarea\n\tvar TextareaHint = React.createClass({\n\t    displayName: 'TextareaHint',\n\t\n\t    handleChange: function handleChange(e) {\n\t        this.props.data.handle({\n\t            value: e.target.value,\n\t            id: this.props.data.setting.id\n\t        });\n\t    },\n\t    render: function render() {\n\t        var status = this.props.data.status ? this.props.data.status : {},\n\t            classNameContainer = typeof this.props.data.classname != 'undefined' ? 'frm_textarea_group with_hint ' + this.props.data.classname + (status.failText ? ' fail' : '') : 'frm_textarea_group with_hint' + (status.failText ? ' fail' : ''),\n\t            domHint = typeof this.props.data.max != 'undefined' ? React.createElement(\n\t            'span',\n\t            { className: 'frm_hint' },\n\t            React.createElement(\n\t                'i',\n\t                null,\n\t                this.props.data.num\n\t            ),\n\t            React.createElement(\n\t                'span',\n\t                null,\n\t                ' / '\n\t            ),\n\t            React.createElement(\n\t                'b',\n\t                null,\n\t                this.props.data.max\n\t            )\n\t        ) : null;\n\t        return React.createElement(\n\t            'div',\n\t            { className: classNameContainer },\n\t            this.props.data.setting.label ? React.createElement(\n\t                'label',\n\t                { className: 'frm_label' },\n\t                this.props.data.setting.label\n\t            ) : null,\n\t            React.createElement(\n\t                'div',\n\t                { className: 'frm_textarea_box' },\n\t                React.createElement(\n\t                    'textarea',\n\t                    { type: 'text', placeholder: this.props.data.placeholder, onChange: this.handleChange, className: 'frm_textarea' },\n\t                    this.props.data.value\n\t                ),\n\t                domHint\n\t            ),\n\t            status.failText ? React.createElement(\n\t                'p',\n\t                { className: 'frm_tips fail' },\n\t                status.failText\n\t            ) : null\n\t        );\n\t    }\n\t});\n\t\n\tvar Inner = React.createClass({\n\t    displayName: 'Inner',\n\t\n\t    getInitialState: function getInitialState() {\n\t        return {\n\t            isOpen: {\n\t                input: false,\n\t                textarea: false\n\t            },\n\t            input: {\n\t                label: '我是input的label',\n\t                id: 'inputId', //必填，string，触发事件返回时会带回来\n\t                max: 8, //选填，int，有就会显示字数\n\t                num: 0, //选填，当前输入的字数\n\t                classname: 'inputExtendClassName', //选填，string\n\t                handle: this.handleChangeInput, //必填，object\n\t                value: '', //必填，string，input初始化值\n\t                placeholder: '我是input的placeholder', //选填，string，input的placeholder\n\t                status: {\n\t                    ret: 0,\n\t                    failText: ''\n\t                }\n\t            },\n\t            textarea: {\n\t                setting: {\n\t                    label: '我是textarea的label',\n\t                    id: 'textareaId' //必填，string，触发事件返回时会带回来\n\t                },\n\t                status: {\n\t                    ret: 0,\n\t                    failText: ''\n\t                },\n\t                max: 13, //选填，int，有就会显示字数\n\t                num: 0, //选填，当前输入的字数\n\t                classname: 'textareaExtendClassName', //选填，string\n\t                handle: this.handleChangeTextarea, //必填，object\n\t                value: '', //必填，string，textarea初始化值\n\t                placeholder: '我是textarea的placeholder' //选填，string，textarea的placeholder\n\t            },\n\t            resultInput: '',\n\t            resultTextarea: ''\n\t        };\n\t    },\n\t    componentWillMount: function componentWillMount() {\n\t        var initInputValue = 'input初始值',\n\t            initTextareaValue = 'textarea初始值',\n\t            stateInput = this.state.input,\n\t            stateTextarea = this.state.textarea;\n\t\n\t        stateInput.value = initInputValue;\n\t        stateInput.num = initInputValue.length;\n\t        stateTextarea.value = initTextareaValue;\n\t        stateTextarea.num = initTextareaValue.length;\n\t\n\t        this.setState({\n\t            input: stateInput,\n\t            textarea: stateTextarea\n\t        });\n\t    },\n\t    handleChangeInput: function handleChangeInput(v) {\n\t        var stateInput = this.state.input;\n\t        stateInput.value = v.value;\n\t        stateInput.num = v.value.length;\n\t        this.setState({\n\t            input: stateInput,\n\t            resultInput: JSON.stringify(v)\n\t        });\n\t    },\n\t    handleChangeTextarea: function handleChangeTextarea(v) {\n\t        var stateTextarea = this.state.textarea;\n\t        stateTextarea.value = v.value;\n\t        stateTextarea.num = v.value.length;\n\t        this.setState({\n\t            textarea: stateTextarea,\n\t            resultTextarea: JSON.stringify(v)\n\t        });\n\t    },\n\t    handleClickOpenSetting: function handleClickOpenSetting(index, e) {\n\t        var stateIsopen = this.state.isOpen;\n\t        stateIsopen[index] = !stateIsopen[index];\n\t\n\t        this.setState({\n\t            isOpen: stateIsopen\n\t        });\n\t    },\n\t    render: function render() {\n\t        var settingInput = JSON.stringify(this.state.input, null, '\\t'),\n\t            settingTextarea = JSON.stringify(this.state.textarea, null, '\\t');\n\t        return React.createElement(\n\t            'div',\n\t            null,\n\t            React.createElement(\n\t                'h3',\n\t                { className: this.state.isOpen.input ? 'title_Widget open' : 'title_Widget close', onClick: this.handleClickOpenSetting.bind(this, 'input') },\n\t                'InputTextarea.InputHint'\n\t            ),\n\t            this.state.isOpen.input ? React.createElement(\n\t                'pre',\n\t                { className: 'setting' },\n\t                settingInput\n\t            ) : null,\n\t            React.createElement(InputHint, { data: this.state.input }),\n\t            React.createElement(\n\t                'div',\n\t                null,\n\t                this.state.resultInput\n\t            ),\n\t            React.createElement('br', null),\n\t            React.createElement('br', null),\n\t            React.createElement(\n\t                'h3',\n\t                { className: this.state.isOpen.textarea ? 'title_Widget open' : 'title_Widget close', onClick: this.handleClickOpenSetting.bind(this, 'textarea') },\n\t                'InputTextarea.TextareaHint'\n\t            ),\n\t            this.state.isOpen.textarea ? React.createElement(\n\t                'pre',\n\t                { className: 'setting' },\n\t                settingTextarea\n\t            ) : null,\n\t            React.createElement(TextareaHint, { data: this.state.textarea }),\n\t            React.createElement(\n\t                'div',\n\t                null,\n\t                this.state.resultTextarea\n\t            )\n\t        );\n\t    }\n\t});\n\tReact.render(React.createElement(Inner, null), document.getElementById('inner'));\n\t\n\texports.InputHint = InputHint;\n\texports.TextareaHint = TextareaHint;\n\texports.Inner = Inner;\n\n/***/ },\n\n/***/ 10:\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }\n\n/******/ });\n\n\n// WEBPACK FOOTER //\n// widgets/InputTextarea/index.6fb9.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 6fb9adce7f75dc4968ab","import './index.less';\r\n\r\n//带输入提示的输入框\r\nvar InputHint = React.createClass({\r\n    handleChange: function(e){\r\n        this.props.data.handle({\r\n            value: e.target.value,\r\n            id: this.props.data.id\r\n        });\r\n    },\r\n    render: function(){\r\n        var classNameContainer = typeof this.props.data.classname != 'undefined' ? 'frm_input_group with_hint ' + this.props.data.classname : 'frm_input_group with_hint',\r\n            domHint = typeof this.props.data.max != 'undefined' ? <span className=\"frm_hint\">\r\n                        <i>{this.props.data.num}</i>\r\n                        <span> / </span>\r\n                        <b>{this.props.data.max}</b>\r\n                    </span> : null;\r\n        this.props.data.status.failText ? classNameContainer += ' fail' : classNameContainer;\r\n\r\n        return (\r\n            <div className={classNameContainer}>\r\n                {this.props.data.label ? <label className=\"frm_label\">{this.props.data.label}</label> : null}\r\n                <span className=\"frm_input_box\">\r\n                    <input onChange={this.handleChange} type=\"text\" placeholder={this.props.data.placeholder} className=\"frm_input\" value={this.props.data.value} />\r\n                    {domHint}\r\n                </span>\r\n                {this.props.data.status.failText ? <p className=\"frm_tips fail\">{this.props.data.status.failText}</p> : null}\r\n            </div>\r\n        )\r\n    }\r\n});\r\n\r\n//带输入提示的textarea\r\nvar TextareaHint = React.createClass({\r\n    handleChange: function(e){\r\n        this.props.data.handle({\r\n            value: e.target.value,\r\n            id: this.props.data.setting.id\r\n        });\r\n    },\r\n    render: function(){\r\n        var status = this.props.data.status ?  this.props.data.status : {},\r\n            classNameContainer = typeof this.props.data.classname != 'undefined' ? 'frm_textarea_group with_hint ' + this.props.data.classname + (status.failText ? ' fail' : ''): 'frm_textarea_group with_hint' + (status.failText ? ' fail' : ''),\r\n            domHint = typeof this.props.data.max != 'undefined' ? <span className=\"frm_hint\">\r\n                        <i>{this.props.data.num}</i>\r\n                        <span> / </span>\r\n                        <b>{this.props.data.max}</b>\r\n                    </span> : null; \r\n        return (\r\n            <div className={classNameContainer}>\r\n                {this.props.data.setting.label ? <label className=\"frm_label\">{this.props.data.setting.label}</label> : null}\r\n                <div className=\"frm_textarea_box\">\r\n                    <textarea type=\"text\" placeholder={this.props.data.placeholder} onChange={this.handleChange} className=\"frm_textarea\">{this.props.data.value}</textarea>\r\n                    {domHint}\r\n                </div>\r\n                {status.failText ? <p className=\"frm_tips fail\">{status.failText}</p> : null}\r\n            </div>\r\n        )\r\n    }\r\n});\r\n\r\nvar Inner = React.createClass({\r\n    getInitialState: function(){\r\n        return {\r\n            isOpen: {\r\n                input: false,\r\n                textarea: false\r\n            },\r\n            input: {\r\n                label: '我是input的label',\r\n                id: 'inputId',//必填，string，触发事件返回时会带回来\r\n                max: 8,//选填，int，有就会显示字数\r\n                num: 0,//选填，当前输入的字数\r\n                classname: 'inputExtendClassName',//选填，string\r\n                handle: this.handleChangeInput,//必填，object\r\n                value: '',//必填，string，input初始化值\r\n                placeholder: '我是input的placeholder',//选填，string，input的placeholder\r\n                status: {\r\n                    ret: 0,\r\n                    failText: ''\r\n                }\r\n            },\r\n            textarea: {\r\n                setting: {\r\n                    label: '我是textarea的label',\r\n                    id: 'textareaId'//必填，string，触发事件返回时会带回来\r\n                },\r\n                status: {\r\n                    ret: 0,\r\n                    failText: ''\r\n                },\r\n                max: 13,//选填，int，有就会显示字数\r\n                num: 0,//选填，当前输入的字数\r\n                classname: 'textareaExtendClassName',//选填，string\r\n                handle: this.handleChangeTextarea,//必填，object\r\n                value: '',//必填，string，textarea初始化值\r\n                placeholder: '我是textarea的placeholder'//选填，string，textarea的placeholder\r\n            },\r\n            resultInput: '',\r\n            resultTextarea: ''\r\n        }\r\n\r\n    },\r\n    componentWillMount: function(){\r\n        var initInputValue = 'input初始值',\r\n            initTextareaValue = 'textarea初始值',\r\n            stateInput = this.state.input,\r\n            stateTextarea = this.state.textarea;\r\n\r\n            stateInput.value = initInputValue;\r\n            stateInput.num = initInputValue.length;\r\n            stateTextarea.value = initTextareaValue;\r\n            stateTextarea.num = initTextareaValue.length;\r\n\r\n        this.setState({\r\n            input: stateInput,\r\n            textarea: stateTextarea\r\n        });\r\n\r\n    },\r\n    handleChangeInput: function(v){\r\n        var stateInput = this.state.input;\r\n        stateInput.value = v.value;\r\n        stateInput.num = v.value.length;\r\n        this.setState({\r\n            input: stateInput,\r\n            resultInput: JSON.stringify(v)\r\n        });\r\n    },\r\n    handleChangeTextarea: function(v){\r\n        var stateTextarea = this.state.textarea;\r\n        stateTextarea.value = v.value;\r\n        stateTextarea.num = v.value.length;\r\n        this.setState({\r\n            textarea: stateTextarea,\r\n            resultTextarea: JSON.stringify(v)\r\n        });\r\n\r\n    },\r\n    handleClickOpenSetting: function(index, e){\r\n        var stateIsopen = this.state.isOpen;\r\n        stateIsopen[index] = !stateIsopen[index];\r\n        \r\n        this.setState({\r\n            isOpen: stateIsopen\r\n        });\r\n    },\r\n    render: function(){\r\n        var settingInput = JSON.stringify(this.state.input, null, '\\t'),\r\n            settingTextarea = JSON.stringify(this.state.textarea, null, '\\t');\r\n        return (\r\n            <div>\r\n                <h3 className={this.state.isOpen.input ? 'title_Widget open' : 'title_Widget close'} onClick={this.handleClickOpenSetting.bind(this, 'input')}>InputTextarea.InputHint</h3>\r\n                {this.state.isOpen.input ? <pre className=\"setting\">{settingInput}</pre> : null}\r\n                <InputHint data={this.state.input} />\r\n                <div>\r\n                    {this.state.resultInput}\r\n                </div>\r\n                <br />\r\n                <br />\r\n\r\n                <h3 className={this.state.isOpen.textarea ? 'title_Widget open' : 'title_Widget close'} onClick={this.handleClickOpenSetting.bind(this, 'textarea')}>InputTextarea.TextareaHint</h3>\r\n                {this.state.isOpen.textarea ? <pre className=\"setting\">{settingTextarea}</pre> : null}\r\n                <TextareaHint data={this.state.textarea} />\r\n                <div>\r\n                    {this.state.resultTextarea}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n});\r\nReact.render(\r\n    <Inner />,\r\n    document.getElementById('inner')\r\n);\r\n\r\nexport {InputHint, TextareaHint, Inner};\n\n\n// WEBPACK FOOTER //\n// ./F:/一些尝试/component/webpack_package/src/widgets/InputTextarea/index.js"],"sourceRoot":""}